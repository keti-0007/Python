# Задача 49
# Планеты вращаются вокруг звезд по эллиптическим орбитам.
# Назовем самой далекой планетой ту, орбита которой имеет
# самую большую площадь. Напишите функцию
# find_farthest_orbit(list_of_orbits), которая среди списка орбит
# планет найдет ту, по которой вращается самая далекая
# планета. Круговые орбиты не учитывайте: вы знаете, что у
# вашей звезды таких планет нет, зато искусственные спутники
# были были запущены на круговые орбиты. Результатом
# функции должен быть кортеж, содержащий длины полуосей
# эллипса орбиты самой далекой планеты. Каждая орбита
# представляет из себя кортеж из пары чисел - полуосей ее
# эллипса. Площадь эллипса вычисляется по формуле S = pi*a*b,
# где a и b - длины полуосей эллипса. При решении задачи
# используйте списочные выражения. Подсказка: проще всего
# будет найти эллипс в два шага: сначала вычислить самую
# большую площадь эллипса, а затем найти и сам эллипс,
# имеющий такую площадь. Гарантируется, что самая далекая
# планета ровно одна

# Ввод:
# orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]
# print(*find_farthest_orbit(orbits))

# Вывод: 
# 2.5 10



def find_farthest_orbit(orbits):
    list_of_elliptical_orbits = [i for i in orbits if i[0] != i[1]]
    # Список где мы проходимся по кортежам , i-сюда записываются кортежи([(1, 3)...] - проходим по всему списку orbits -> i for i in orbits).
    # Исключаем чтобы в кортеже не было одинаковых значений: if i[0]!= i[1]. 
    # Все остальный, отсортированные кортежи запишутся в данный список  list_of_elliptical_orbits
    list_of_areas = [i[0] * i[1] for i in list_of_elliptical_orbits]
#list_of_areas переменная  куда запишется  подсчет произведения внутри кортежей. Проходим по всему отсортированному списку list_of_elliptical_orbits 

    max_area_index = list_of_areas.index(max(list_of_areas))# берем максимальное значение из list_of_areas 
#  max_area_index переменная куда запишется индекс максимального из кортежей.  
    return list_of_elliptical_orbits[max_area_index]

#                 или   
    # max_area_index = [i for i in range(len(list_of_areas)) if list_of_areas[i] == max(list_of_areas)]
    # return list_of_elliptical_orbits[max_area_index[0]]

orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]
print(*find_farthest_orbit(orbits))